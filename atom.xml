<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Bendon 菜雞啄食場</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-03T15:50:29.855Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mr.Bendon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>什麼是 useEffect ?</title>
    <link href="http://example.com/2023/12/31/useEffect/"/>
    <id>http://example.com/2023/12/31/useEffect/</id>
    <published>2023-12-31T08:12:37.000Z</published>
    <updated>2024-01-03T15:50:29.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什麼是-useEffect"><a href="#什麼是-useEffect" class="headerlink" title="什麼是 useEffect ?"></a>什麼是 useEffect ?</h1><p>useEffect 這一個 Hook 可以讓開發者可以處理 function component 的 side effect．</p><p>但這句話對我來說可能我很難一眼看出他到底在說什麼．所以到底什麼是 side effect，這可能得先說什麼是「純粹函式」，至於什麼是純粹函式，滿足以下兩個條件就算是符合純粹函式： 1.輸入相同的值，函式總是會給予一樣的結果，過程不會受到任何外部的干擾(或不倚賴外部狀態） 2.函式執行的過程沒有對外部的狀態進行修改，換言之，該函式執行時沒有修改全域變數、修改檔案、發送網路請求等。</p><p>若沒有滿足上述兩個條件，則在 function 執行的過程中則會產生 side effect ，舉理來說，包含但不限於以下操作都是會產生 side effect:</p><ol><li>在 react 中如果去修改父層的某一個狀態(修改外部狀態</li><li>對ＤＯＭ進行操作，即使是修改元件內部的ＤＯＭ也是，因為元件的渲染過程和 DOM 的更新是由 React 自動管理的，但如果在元件內部手動直接修改 DOM，也算是修改外部狀態。</li><li>向外發送網路請求（返回的狀態難以預測，可能會發生網路延遲、請求失敗等等的，沒有符合純粹函式的第一點）</li><li>console.log(…) 、alert(…)都是有 side effect，這是因為有涉及到與外部環境的交互（console.log 更動瀏覽器控制台）。</li></ol><p>說這些到底跟 useEffect 有什麼關係？</p><p>useEffect 這一個 hook 主要是提供讓這些 side effect 有一個合適的生命週期來執行．<br>先說說 useEffect 的主要使用方式，useEffect 主要是告訴 react 當前的這一個 component 需要有些事情要在 render 之後做．而在預設的情況下，元件的每一次 render 他都會觸發，但這個 hook 也提供了一些依賴陣列，可以設定什麼狀況會觸發這個 useEffect．</p><p>useEffect(()&#x3D;&gt;{….}, dependenciesArray)</p><p>若 dependenciesArray 為[]，則僅有在元件 mount 時會執行 useEffect 內的函式一次<br>若 dependenciesArray 為[id, data]，則是當 id 或 data 狀態有變動時，會觸發 useEffect，換言之，元件只要每次重新渲染後 若 dependenciesArray 內的元素沒有改變，任何 useEffect 裡面的函式就不會被執行！</p><p>&lt;這裡還需要一些 code 來說明補充&gt;</p><p>componentDidMount：是指當 component 中畫面第一次渲染完後觸發的生命週期函數。相當於使用 useEffect 但依賴項為空陣列．當 component 完成載入時會觸發 componentDidMount 中的函式．</p><p>componentDidUpdate：是指當 component 中有 state 改變時要觸發的生命週期函數。相當於依賴項有發生變動時，才會觸發 componentDidUpdate 中的函式．</p><p>componentWillUnmount：等同 useEffect 的 return 效果，在 component 要 Unmount 時，才會觸發 componentWillUnmount 中的函式．</p><p>參考資料：<br>使用 Effect Hook<br><a href="https://zh-hant.legacy.reactjs.org/docs/hooks-effect.html">https://zh-hant.legacy.reactjs.org/docs/hooks-effect.html</a></p><p>Day 12: ES6 篇: Side Effects(副作用)與 Pure Functions(純粹函式)<br><a href="https://ithelp.ithome.com.tw/articles/10185780">https://ithelp.ithome.com.tw/articles/10185780</a></p><p>React.js Hook 入門 - 3. useEffect<br><a href="https://www.dropbox.com/paper/ep/redirect/external-link?url=https://hackmd.io/@chris80072/SJvii1yAD&hmac=Hdw2ZdivN+tPLa7gOGkeec7rCBHP34GLMh+xrMX5tuQ=">https://www.dropbox.com/paper/ep/redirect/external-link?url=https%3A%2F%2Fhackmd.io%2F%40chris80072%2FSJvii1yAD&amp;hmac=Hdw2ZdivN%2BtPLa7gOGkeec7rCBHP34GLMh%2BxrMX5tuQ%3D</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什麼是-useEffect&quot;&gt;&lt;a href=&quot;#什麼是-useEffect&quot; class=&quot;headerlink&quot; title=&quot;什麼是 useEffect ?&quot;&gt;&lt;/a&gt;什麼是 useEffect ?&lt;/h1&gt;&lt;p&gt;useEffect 這一個 Hook 可以讓</summary>
      
    
    
    
    
  </entry>
  
</feed>
